# 제주관광서비스 V2.0 프로젝트 헌장

## 📋 프로젝트 개요

### 🎯 프로젝트명
**제주관광서비스 V2.0 - 조-노-서 협업 시스템 기반 재구축**

### 🌟 프로젝트 목적
- **V1.0 재구현**: 기존 완성된 제주관광서비스와 동일한 기능을 새로운 협업 체계로 구현
- **협업 시스템 검증**: 조대표-노팀장-서대리(커서AI) 3단계 협업 모델 실증
- **효율성 증대**: 역할 분담을 통한 개발 속도 향상 및 품질 개선
- **인사이트 획득**: 커서AI 활용 역량 개발 및 업무 자동화 경험 축적

### 🏆 성공 기준
1. **기능 완성도**: V1.0 대비 100% 동일한 기능 구현
2. **개발 효율성**: V1.0 대비 30-50% 개발 시간 단축
3. **코드 품질**: 더 정제되고 유지보수 가능한 코드 생산
4. **협업 모델**: 조-노-서 시스템의 성공적 운영

## 👥 조-노-서 협업 시스템

### 🎖️ 역할 정의

#### 조대표 (Chief Executive & Product Owner)
**책임**: 전체 프로그램 기획 및 총괄
- ✅ 프로젝트 비전 및 목표 설정
- ✅ 요구사항 정의 및 우선순위 결정
- ✅ 최종 의사결정 및 품질 승인
- ✅ 전략적 방향성 제시 및 조정

#### 노팀장 (Development PM & Technical Lead)
**책임**: 조대표와 대화를 통한 개발 단계화 및 각 단계 감독
- ✅ 기획을 기술적 구현 계획으로 변환
- ✅ 개발 단계 세분화 및 일정 관리
- ✅ 서대리 교육, 멘토링 및 코드 리뷰
- ✅ 품질 보증 및 통합 테스트 관리
- ✅ 기술적 이슈 해결 및 아키텍처 설계

#### 서대리 (Cursor AI Coding Specialist)
**책임**: 노팀장의 지시를 받아 코딩 실행
- ✅ 커서AI를 활용한 코드 작성
- ✅ 노팀장의 가이드라인에 따른 구현
- ✅ 단위 테스트 및 기본 검증
- ✅ 코드 문서화 및 주석 작성

### 🔄 최종 확정 교육 중심 워크플로우

```
혁신적 V2.0 개발 방식: 덮어쓰기 교육 시스템

1. 분석 학습 단계 (서대리 교육)
   기존 V1.0 파일 분석 → backupv1.0 참고 비교 → 개선점 파악

2. 실습 개발 단계 (커서 AI 활용)
   서대리 커서 코딩 → 기존 파일 덮어쓰기 → 즉시 온라인 반영

3. 실시간 검증 단계 (교육 피드백)
   온라인 즉시 확인 → 노팀장 + 조대표 피드백 → 추가 개선

4. 점진적 완성 단계 (스킬 업그레이드)
   파일별 순차 개선 → 단계적 난이도 상승 → 전체 V2.0 완성

🎓 교육 효과: 
- 실무 중심 학습 (실제 운영 사이트 개선)
- 즉시 피드백 (Before & After 즉시 비교)
- 안전한 실험 (backupv1.0 완전 백업 보장)
- 점진적 성장 (레벨별 스킬 업그레이드)

⚡ 효율성: 기존 대비 35% 시간 단축 + 교육 효과 극대화
```

## 🎯 V1.0 기준 구현 목표

### 📊 V1.0 완성 현황
- **웹페이지**: 8개 (메인 + 서브 7개)
- **API 통합**: 9개 (날씨+지도+관광+교통+항공+버스+여객선+PHP프록시+숙박)
- **관광 콘텐츠**: 42개
- **기술 스택**: HTML5, CSS3, JavaScript ES6+, PHP, 실시간 API 연동

### 🎯 V2.0 구현 범위
V1.0과 **100% 동일한 기능**을 다음과 같이 구현:

1. **메인 페이지**: 반응형 랜딩 페이지
2. **관광명소 페이지**: 12개 관광지 + 필터링 시스템
3. **맛집 페이지**: 12개 맛집 + 이중 필터 시스템
4. **숙박 페이지**: 6개 숙박시설 + 실시간 API 연동
5. **날씨 페이지**: 4개 지역 실시간 날씨 + 관광지 추천
6. **교통정보 페이지**: 항공+버스+여객선+교통량 통합
7. **지도 페이지**: Google Maps 연동 + 관광지 마커
8. **검색 페이지**: 통합 검색 시스템
9. **여행정보 페이지**: 종합 가이드 정보

## 🛠️ 기술 가이드라인

### 💻 개발 환경
- **주 개발 도구**: 커서 AI (서대리 전용)
- **교육 방식**: 기존 V1.0 파일 덮어쓰기로 점진적 개선
- **학습 자료**: Z:\html\backupv1.0\ (V1.0 완전 백업 참고용)
- **실습 환경**: 기존 V1.0 파일들 유지 → 덮어쓰기 → 즉시 FTP 싱크
- **검증 도구**: text-editor MCP (노팀장 전용)
- **테스트 환경**: goodfaceai.dothome.co.kr 실시간 반영

### 🎓 교육 시스템
- **실무 학습**: 실제 운영 중인 웹사이트 직접 개선
- **비교 학습**: V1.0 → V2.0 Before & After 실시간 비교
- **단계적 성장**: 파일별 순차 개선으로 스킬 레벨업
- **안전한 실험**: backupv1.0 백업으로 실수 걱정 없는 학습
- **즉시 피드백**: 덮어쓰기 → 온라인 확인 → 실시간 개선 지도

### 📁 V2.0 파일 관리 방식
```
Z:\html\
├── backupv1.0\              # V1.0 완전 백업 (학습 참고용)
├── index.html               # V1.0 → 서대리가 V2.0으로 덮어쓰기
├── css\                     # V1.0 → 서대리가 V2.0으로 덮어쓰기
├── js\                      # V1.0 → 서대리가 V2.0으로 덮어쓰기
├── pages\                   # V1.0 → 서대리가 V2.0으로 덮어쓰기
├── accommodation-api.php    # V1.0 → 서대리가 V2.0으로 덮어쓰기
└── proxy.php                # V1.0 → 서대리가 V2.0으로 덮어쓰기

교육 프로세스:
1. 기존 파일 분석 (V1.0 현재 상태)
2. 백업 파일 비교 (backupv1.0 참고)  
3. 개선 코드 작성 (커서 AI 활용)
4. 덮어쓰기 저장 (즉시 온라인 반영)
5. 실시간 검증 (교육 피드백)
```

## 📅 개발 일정

### 🚀 Phase 1: 준비 단계 (1일)
- 프로젝트 환경 설정
- 서대리 온보딩 및 교육
- 기술 스택 및 구조 결정

### 🔧 Phase 2: 핵심 개발 (3일)
- 메인 페이지 + 기본 구조
- 주요 서브 페이지 구현
- API 연동 및 동적 기능

### 🎯 Phase 3: 완성 및 검증 (1일)
- 통합 테스트 및 품질 검수
- 최종 배포 및 성과 분석

**총 예상 기간**: 5일 (V1.0 대비 4일에서 5일로 1일 추가 - 협업 체계 구축 시간 포함)

## ⚠️ 리스크 관리

### 🔴 주요 리스크
1. **커서 AI 학습 곡선**: 서대리의 커서 활용 숙련도
2. **커뮤니케이션 갭**: 3단계 협업에서의 의사소통 이슈
3. **기술 복잡도**: V1.0과 동일한 복잡한 API 연동

### 🛡️ 대응 방안
1. **단계적 학습**: 간단한 작업부터 점진적 난이도 상승
2. **명확한 문서화**: 모든 지시사항과 피드백 문서화
3. **V1.0 참고**: 기존 완성품을 참고 자료로 적극 활용

## 🎊 성공 지표

### 📊 정량적 지표
- **개발 속도**: V1.0 대비 시간 단축율
- **코드 품질**: 코드 리뷰 점수 및 버그 발생률
- **기능 완성도**: V1.0 대비 기능 구현율

### 🌟 정성적 지표
- **협업 만족도**: 3인 협업 시스템의 효과성
- **학습 성과**: 커서 AI 활용 역량 향상 정도
- **프로세스 개선**: 향후 업무 자동화에 활용 가능한 인사이트

---

**📅 문서 작성일**: 2025년 6월 8일  
**✍️ 작성자**: 조대표, 노팀장 공동  
**🎯 목적**: V2.0 프로젝트 새 세션 시작 시 참고 문서  
**📋 상태**: 프로젝트 시작 전 준비 완료